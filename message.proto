syntax = "proto3";

package prb;

import "google/protobuf/timestamp.proto";
import "utils.proto";
import "error.proto";
import "worker/lifecycle.proto";
import "worker/models.proto";
import "manager/state.proto";
import "trader/schedule.proto";

enum MessageType {
  MTP_BROADCAST = 0;
  MTP_QUERY = 1;
  MTP_REPLY = 2;
  MTP_NOTIFY = 3;
}

enum MessageTarget {
  MTG_BROADCAST = 0;
  MTG_MANAGER = 1;
  MTG_FETCHER = 2;
  MTG_TRADE_WORKER = 3;
  MTG_WORKER = 4;
  MTG_INTERNAL_PRESERVED = 5;
}

message MessageContent {
  oneof type { // main rpc route switch
    bytes encrypted = 1; // MessageContent encoded+encrypted
    Error error = 2;
    Ack ack = 3;
    manager.WorkerStateUpdate worker_state_update = 4;
    manager.QueryWorkerState query_worker_state = 5;
    manager.AccountStateUpdate account_state_update = 6;
    manager.QueryAccountState query_account_state = 7;
    worker.RequestKickWorker request_kick_worker = 8;
    worker.WorkerShouldExit worker_should_exit = 9;
    trade.TradeSchedulerStateUpdate trade_scheduler_state_update = 10;
    trade.CallOnlineScheduler call_online_scheduler = 11;
    trade.FetcherStateUpdate fetcher_state_update = 12;
    trade.CallOnlineFetcher call_online_fetcher = 13;
    manager.LifecycleManagerStateUpdate lifecycle_manager_state_update = 14;
    manager.CallOnlineLifecycleManager call_online_lifecycle_manager = 15;
    manager.RequestCreateWorker request_create_worker = 16;
    manager.RequestUpdateWorker request_update_worker = 17;

    worker.RequestStartWorkerLifecycle request_start_worker_lifecycle = 18; // worker only, initialize crypto context
    worker.AreYouThere are_you_there = 19; // worker only
  }
}

message Message {
  MessageTarget from = 1;
  MessageTarget to = 2;
  MessageContent content = 3;
  uint64 created_at = 4; // required
  uint64 nonce = 5; // required
  uint64 nonce_ref = 6; // 0 => none
  MessageType type = 7;
}